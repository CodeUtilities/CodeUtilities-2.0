plugins {
	id 'fabric-loom' version '0.4.10'
	id 'maven-publish'
}

apply plugin: 'idea'

repositories {
	jcenter()
	maven {
		name = 'CottonMC'
		url = 'https://server.bbkr.space/artifactory/libs-release'
	}
  maven {
		name = 'Jitpack'
		url = "https://jitpack.io"
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	implementation "com.google.code.gson:gson:2.8.6"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "io.github.cottonmc:cotton-client-commands:1.0.1+1.16-rc1"
	modImplementation "io.github.prospector:modmenu:1.14.0+build.24" //https://maven.fabricmc.net/io/github/prospector/modmenu/
	// disabled temporarily
	modImplementation "io.github.cottonmc:LibGui:2.2.0+1.16.1" //https://github.com/CottonMC/LibGui/releases
	modImplementation "org.json:json:20200518"

	modApi "me.shedaniel.cloth:config-2:4.6.0" //https://www.curseforge.com/minecraft/mc-mods/cloth-config/files
	modApi "me.sargunvohra.mcmods:autoconfig1u:3.2.0-unstable"

	include "me.shedaniel.cloth:config-2:4.6.0" //https://www.curseforge.com/minecraft/mc-mods/cloth-config/files
	include "me.sargunvohra.mcmods:autoconfig1u:3.2.0-unstable"
	include "io.github.cottonmc:cotton-client-commands:1.0.1+1.16-rc1"
	include "io.github.cottonmc:LibGui:2.2.0+1.16.1"  //https://github.com/CottonMC/LibGui/releases
	include "org.json:json:20200518"
  
	// Was having some issues so I needed to add this
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	
	modRuntime "com.lettuce.fudge:notenoughcrashes:2.1.2+1.16.1"
	modRuntime ("com.github.SuperCoder7979:databreaker:ca256383f1c320ef3e230fdb0b6a2df5a79b3387") {
		exclude module : "fabric-loader"
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}